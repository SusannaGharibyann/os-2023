Задание 1

Написать скрипт, который читает из стандартного потока числа и
печатает их сумму. Завершается либо с завершением потока ввода,
либо, при достижении лимита. Лимит передается как аргумент
командной строки.

`echo "1\n2\n3" | ./sum.sh 25` # 6
`echo "10\n20\n30" | ./sum.sh 25` # 30

Для завершения скрипта есть команда `exit <status>`




Задание 2

Напишите функцию с одним параметром - директорией. Функция должна
вернуть количество файлов в данной директории. Напишите скрипт, который
будет аргументом командной строки принимать директорию и вызывать
данную функцию.

`./count-files.sh /usr/local/bin` # 24




Задание 3

Напишите скрипт на bash, который будет искать наибольший общий делитель (НОД, greatest common
divisor, GCD) двух чисел.
После ввода чисел скрипт считает их НОД и выводит на экран
сообщение "GCD is <посчитанное значение>", например, для чисел 15 и 25 это будет "GCD is 5". После
этого скрипт опять входит в режим ожидания двух натуральных чисел. Если в какой-то момент работы
пользователь ввел вместо этого пустую строку, то нужно написать на экран "bye" и закончить свою работу.

Вычисление НОД несложно реализовать с помощью алгоритма Евклида. Вам нужно написать функцию
gcd, которая принимает на вход два аргумента (назовем их M и N). Если аргументы равны, то мы нашли
НОД -- он
равен M (или N), нужно выводить соответствующее сообщение на экран (см. выше). Иначе нужно сравнить
аргументы между собой. Если M больше N, то запускаем ту же функцию gcd, но в качестве первого
аргумента передаем (M- N), а в качестве второго N. Если же наоборот, M меньше N, то запускаем функцию
gcd с первым аргументом M, а вторым (N-M).




Задание 4

Написать скрипт, который переименовывать все .jpg файлы в данной
директории, чтобы они начинались с даты их создания. Например, если в
директории есть файл с названием `cat.jpg`, который был создан 2023-09-19,
то новый файл должен называться `2023-09-19-cat.jpg`

директории.
